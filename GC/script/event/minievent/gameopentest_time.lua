--公测活动，时间轴控制
--孙多良
--2008.10.09

local tbGame = {};
SpecialEvent.GameOpenTest = tbGame;
tbGame.AllStartTime = 200810160000
tbGame.TimeState = 
{	--活动, 1判断全局变量，2存储全局变量， 3激活时间， 4持续时间， 5活动激活过期时间
	[1]  ={DBTASD_SERVER_STARTTIME, 	DBTASD_EVENT_GONGCE_YANHUA,	 	 1, 14, 20081115}, --庆祝烟花
	[2]  ={DBTASD_EVENT_GONGCE_YANHUA,	DBTASD_EVENT_GONGCE_RABBIT,		14, 14, 20081116}, --财宝兔
	[3]	 ={DBTASD_SERVER_STARTTIME, 	DBTASD_EVENT_GONGCE_PAYAWARD,	10,	14, 20081126}, --充值送礼
}

--获得开启状态（1开启，0为未开启）
function tbGame:GetState(nType)
	local nDate2 = tonumber(os.date("%Y%m%d%H%M", GetTime()));
	if nDate2 < self.AllStartTime then
		return 0
	end 	
	if KGblTask.SCGetDbTaskInt(self.TimeState[nType][2]) == 0 then
		return 0;
	end
	if KGblTask.SCGetDbTaskInt(self.TimeState[nType][2]) + self.TimeState[nType][4] * 24* 3600 < GetTime() then
		return 0;
	end
	return 1;
end

--返回活动开始，开始时间，结束时间，单位为秒,返回0则不启动该活动。
function tbGame:GetTime(nType)
	local nDate2 = tonumber(os.date("%Y%m%d%H%M", GetTime()));
	if nDate2 < self.AllStartTime or not self.TimeState[nType] then
		return 0
	end 
	if KGblTask.SCGetDbTaskInt(self.TimeState[nType][2]) > 0 then
		return KGblTask.SCGetDbTaskInt(self.TimeState[nType][2]), (KGblTask.SCGetDbTaskInt(self.TimeState[nType][2]) + self.TimeState[nType][4] * 24 * 3600);
	end
	
	if KGblTask.SCGetDbTaskInt(self.TimeState[nType][1]) > 0 and (KGblTask.SCGetDbTaskInt(self.TimeState[nType][1]) + self.TimeState[nType][3] * 24 * 3600) < Lib:GetDate2Time(self.TimeState[nType][5] * 10000) then
		return (KGblTask.SCGetDbTaskInt(self.TimeState[nType][1]) + self.TimeState[nType][3] * 24 * 3600) , ((KGblTask.SCGetDbTaskInt(self.TimeState[nType][1]) + self.TimeState[nType][3] * 24 * 3600) + self.TimeState[nType][4] * 24 * 3600);
	end
	if (KGblTask.SCGetDbTaskInt(self.TimeState[1][1]) + (self.TimeState[1][3] + self.TimeState[2][3]) * 24 * 3600) < Lib:GetDate2Time(self.TimeState[nType][5] * 10000) then
		return (KGblTask.SCGetDbTaskInt(self.TimeState[1][1]) + (self.TimeState[1][3] + self.TimeState[2][3]) * 24 * 3600), (KGblTask.SCGetDbTaskInt(self.TimeState[1][1]) + (self.TimeState[1][3] + self.TimeState[2][3]) * 24 * 3600) + self.TimeState[nType][4] * 24 * 3600;
	end
	return 0;
end

if (MODULE_GC_SERVER) then

function tbGame:RegisterScheduleTask()
	local nDate = tonumber(GetLocalDate("%Y%m%d"));
	if nDate < self.TimeState[3][5] then
		local nTaskId = KScheduleTask.AddTask("公测活动", "SpecialEvent", "GameOpenTest_cheduleCallOut");
		assert(nTaskId > 0);
		KScheduleTask.RegisterTimeTask(nTaskId, 0, 1);
	end	
end

function SpecialEvent:GameOpenTest_cheduleCallOut()
	local nTime = GetTime();
	local nDate = tonumber(os.date("%Y%m%d", nTime));
	local nDate2 = tonumber(os.date("%Y%m%d%H%M", nTime));
	if nDate2 < SpecialEvent.GameOpenTest.AllStartTime then
		return 0
	end
	for _, tbParam in pairs(SpecialEvent.GameOpenTest.TimeState) do
		if nDate < tbParam[5] then
			if KGblTask.SCGetDbTaskInt(tbParam[2]) == 0 and KGblTask.SCGetDbTaskInt(tbParam[1]) > 0 then
				if KGblTask.SCGetDbTaskInt(tbParam[1]) + tbParam[3] * 24* 3600 <= nTime then
					KGblTask.SCSetDbTaskInt(tbParam[2], Lib:GetDate2Time(nDate * 10000))
				end
			end
		end
	end
	--SpecialEvent.GameOpenTest:SetOpenTestNews();
end

--tbGame:RegisterScheduleTask();
GCEvent:RegisterGCServerStartFunc(SpecialEvent.GameOpenTest_cheduleCallOut, SpecialEvent);

end